//LRU.java
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Scanner;

public class LRU {
    private Scanner sc;

    public void execute() {
        sc = new Scanner(System.in);
        System.out.println("Enter Number of Pages:");
        int numPages = sc.nextInt();
        int pages[] = new int[numPages];
        System.out.println("Enter Reference String: ");
        for (int i = 0; i < numPages; i++) {
            pages[i] = sc.nextInt();
        }

        System.out.println("Enter Number of Frames");
        int capacity = sc.nextInt();

       
        HashSet<Integer> frames = new HashSet<>(capacity);

       
        HashMap<Integer, Integer> index = new HashMap<>();
        int pageFaults = 0;
        int hits = 0;
        for (int i = 0; i < numPages; i++) {
            if (frames.size() < capacity) 
            {
                
                if (!frames.contains(pages[i])) {
                    frames.add(pages[i]);
                    index.put(pages[i], i);
                    pageFaults++;

                    
                } else {
                    hits++;
                    index.put(pages[i], i);
                }
            } else 
            {
                if (!frames.contains(pages[i]))
                {
                    int lru = Integer.MAX_VALUE;
                    int val = Integer.MIN_VALUE;

                    Iterator<Integer> itr = frames.iterator();
                    while (itr.hasNext()) {
                        int temp = itr.next();
                        if (index.get(temp) < lru) {
                            lru = index.get(temp);
                            val = temp;
                        }
                    }

                    frames.remove(val);
                    frames.add(pages[i]);
                    pageFaults++;
                    index.put(pages[i], i);
                } else // frame is present in set
                {
                    hits++;
                    index.put(pages[i], i);
                }
            }
            frames.forEach(System.out::print);
            System.out.println();
        }

        System.out.println("Number of Page Faults : " + pageFaults);
        System.out.println("Hits:\t" + hits);
        System.out.println("hit ratio: " + ((double) hits / (double) numPages));

    }
}



